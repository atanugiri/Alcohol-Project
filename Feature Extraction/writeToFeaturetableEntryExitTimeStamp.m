% clear; clc;
datasource = 'live_database';
conn = database(datasource,'postgres','1234');
dateQuery = "SELECT id, referencetime FROM live_table ORDER BY id";
allDates = fetch(conn, dateQuery);
allDates.referencetime = datetime(allDates.referencetime, 'Format', 'MM/dd/yyyy');
startDate = datetime('09/12/2023', 'InputFormat', 'MM/dd/yyyy');
endDate = datetime('10/31/2023', 'InputFormat', 'MM/dd/yyyy');
endDate = endDate + days(1);

dataInRange = allDates(allDates.referencetime >= startDate & allDates.referencetime <= endDate, :);
idList = dataInRange.id;

for index = 1:10 %length(idList)
    id = idList(index);
    try
    % Calculate each feature value using MATLAB
    [entryTime,exitTime,logicalApproach,distanceBeforeTone, ...
    velocityBeforeTone,distanceAfterTone,velocityAfterTone, ...
    distanceAfterToneUntilLimitingTimeStamp,velocityAfterToneUntilLimitingTimeStamp, ...
    distanceAfterToneUntilEntryTimeStamp,velocityAfterToneUntilEntryTimeStamp, ...
    distanceAfterEntryTimeStampUntilLimitingTimeStamp, ...
    velocityAfterEntryTimeStampUntilLimitingTimeStamp, ...
    distanceAfterExitTimeStamp,velocityAfterExitTimeStamp, ...
    distanceAfterExitTimeStampUntilLimitingTimeStamp, ...
    velocityAfterExitTimeStampUntilLimitingTimeStamp] = entryExitTimeStampFun(id);
    
    % Create and execute an INSERT query for each feature
    insert_query = sprintf(['INSERT INTO salghrfeaturetable (id, entryTime, exitTime, ' ...
        'logicalApproach, distanceBeforeTone, velocityBeforeTone, distanceAfterTone, ' ...
        'velocityAfterTone, distanceAfterToneUntilLimitingTimeStamp, ' ...
        'velocityAfterToneUntilLimitingTimeStamp, ' ...
        'distanceAfterToneUntilEntryTimeStamp, velocityAfterToneUntilEntryTimeStamp, ' ...
        'distanceAfterEntryTimeStampUntilLimitingTimeStamp, ' ...
        'velocityAfterEntryTimeStampUntilLimitingTimeStamp, ' ...
        'distanceAfterExitTimeStamp, velocityAfterExitTimeStamp, ' ...
        'distanceAfterExitTimeStampUntilLimitingTimeStamp, ' ...
        'velocityAfterExitTimeStampUntilLimitingTimeStamp) ' ...
        'VALUES (%d, %f, %f, %f, %f, %f, %f, %f, %f, %f, %f, %f, %f, %f, %f, %f, %f, %f)'], ...
        id, entryTime, exitTime, logicalApproach, distanceBeforeTone, ...
        velocityBeforeTone, distanceAfterTone, velocityAfterTone, ...
        distanceAfterToneUntilLimitingTimeStamp, velocityAfterToneUntilLimitingTimeStamp, ...
        distanceAfterToneUntilEntryTimeStamp, velocityAfterToneUntilEntryTimeStamp, ...
        distanceAfterEntryTimeStampUntilLimitingTimeStamp, ...
        velocityAfterEntryTimeStampUntilLimitingTimeStamp, distanceAfterExitTimeStamp, ...
        velocityAfterExitTimeStamp, distanceAfterExitTimeStampUntilLimitingTimeStamp, ...
        velocityAfterExitTimeStampUntilLimitingTimeStamp);
    
    exec(conn, insert_query);
    
    catch
        fprintf("Calculation error in %d\n", id);
        continue;
    end
end